*** homes/kaltenbe/Devel/openair/openair_branches/openair_lte/openair2/RRC/LITE/MESSAGES/asn1c/asn1c/skeletons/der_encoder.c	2011-03-31 10:22:56.000000000 +0200
--- der_encoder.c	2011-05-31 10:28:26.000000000 +0200
***************
*** 3,9 ****
   * Redistribution and modifications are permitted subject to BSD license.
   */
  #include <asn_internal.h>
- #include <errno.h>
  
  static ssize_t der_write_TL(ber_tlv_tag_t tag, ber_tlv_len_t len,
  	asn_app_consume_bytes_f *cb, void *app_key, int constructed);
--- 3,8 ----
   * Redistribution and modifications are permitted subject to BSD license.
   */
  #include <asn_internal.h>
  
  static ssize_t der_write_TL(ber_tlv_tag_t tag, ber_tlv_len_t len,
  	asn_app_consume_bytes_f *cb, void *app_key, int constructed);
***************
*** 81,89 ****
  		asn_app_consume_bytes_f *cb,
  		void *app_key) {
  	ber_tlv_tag_t *tags;	/* Copy of tags stream */
  	int tags_count;		/* Number of tags */
  	size_t overall_length;
  	ssize_t *lens;
  	int i;
  
  	ASN_DEBUG("Writing tags (%s, tm=%d, tc=%d, tag=%s, mtc=%d)",
--- 80,90 ----
  		asn_app_consume_bytes_f *cb,
  		void *app_key) {
  	ber_tlv_tag_t *tags;	/* Copy of tags stream */
+ 	ber_tlv_tag_t tags_array[8];
  	int tags_count;		/* Number of tags */
  	size_t overall_length;
  	ssize_t *lens;
+ 	ssize_t lens_array[8];
  	int i;
  
  	ASN_DEBUG("Writing tags (%s, tm=%d, tc=%d, tag=%s, mtc=%d)",
***************
*** 102,111 ****
  		 * and initialize it appropriately.
  		 */
  		int stag_offset;
! 		tags = (ber_tlv_tag_t *)alloca((sd->tags_count + 1) * sizeof(ber_tlv_tag_t));
  		if(!tags) {	/* Can fail on !x86 */
! 			errno = ENOMEM;
! 			return -1;
  		}
  		tags_count = sd->tags_count
  			+ 1	/* EXPLICIT or IMPLICIT tag is given */
--- 103,121 ----
  		 * and initialize it appropriately.
  		 */
  		int stag_offset;
! 		//tags = (ber_tlv_tag_t *)alloca((sd->tags_count + 1) * sizeof(ber_tlv_tag_t));
! 		tags = &(tags_array[0]);
! 		if ((sd->tags_count + 1)>=8) {
! #ifdef USER_MODE
! 		  printf("der_encoder.c: ERROR tags array too small. Increase size!\n");
! 		  exit(-1);
! #endif
! 		  errno = ENOMEM;
! 		  return -1;
! 		}
  		if(!tags) {	/* Can fail on !x86 */
! 		  errno = ENOMEM;
! 		  return -1;
  		}
  		tags_count = sd->tags_count
  			+ 1	/* EXPLICIT or IMPLICIT tag is given */
***************
*** 124,135 ****
  	if(tags_count == 0)
  		return 0;
  
! 	lens = (ssize_t *)alloca(tags_count * sizeof(lens[0]));
  	if(!lens) {
! 		errno = ENOMEM;
! 		return -1;
  	}
! 
  	/*
  	 * Array of tags is initialized.
  	 * Now, compute the size of the TLV pairs, from right to left.
--- 134,154 ----
  	if(tags_count == 0)
  		return 0;
  
! 	//lens = (ssize_t *)alloca(tags_count * sizeof(lens[0]));
! 	lens = &(lens_array[0]);
! 	if (tags_count>=8) {
! #ifdef USER_MODE
! 	  printf("der_encoder.c: ERROR lens array too small. Increase size!\n");
! 	  exit(-1);
! #endif
! 	  errno = ENOMEM;
! 	  return -1;
! 	}
  	if(!lens) {
! 	  errno = ENOMEM;
! 	  return -1;
  	}
! 	
  	/*
  	 * Array of tags is initialized.
  	 * Now, compute the size of the TLV pairs, from right to left.
