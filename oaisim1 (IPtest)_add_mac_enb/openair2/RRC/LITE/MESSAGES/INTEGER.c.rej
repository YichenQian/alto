*** homes/kaltenbe/Devel/openair/openair_branches/openair_lte/openair2/RRC/LITE/MESSAGES/asn1c/asn1c/skeletons/INTEGER.c	2011-03-31 10:22:56.000000000 +0200
--- INTEGER.c	2011-05-31 10:28:26.000000000 +0200
***************
*** 6,12 ****
  #include <asn_internal.h>
  #include <INTEGER.h>
  #include <asn_codecs_prim.h>	/* Encoder and decoder of a primitive type */
- #include <errno.h>
  
  /*
   * INTEGER basic type description.
--- 6,11 ----
  #include <asn_internal.h>
  #include <INTEGER.h>
  #include <asn_codecs_prim.h>	/* Encoder and decoder of a primitive type */
  
  /*
   * INTEGER basic type description.
***************
*** 103,109 ****
  static ssize_t
  INTEGER__dump(asn_TYPE_descriptor_t *td, const INTEGER_t *st, asn_app_consume_bytes_f *cb, void *app_key, int plainOrXER) {
  	asn_INTEGER_specifics_t *specs=(asn_INTEGER_specifics_t *)td->specifics;
! 	char scratch[32];	/* Enough for 64-bit integer */
  	uint8_t *buf = st->buf;
  	uint8_t *buf_end = st->buf + st->size;
  	signed long accum;
--- 102,108 ----
  static ssize_t
  INTEGER__dump(asn_TYPE_descriptor_t *td, const INTEGER_t *st, asn_app_consume_bytes_f *cb, void *app_key, int plainOrXER) {
  	asn_INTEGER_specifics_t *specs=(asn_INTEGER_specifics_t *)td->specifics;
! 	char scratch[128];	
  	uint8_t *buf = st->buf;
  	uint8_t *buf_end = st->buf + st->size;
  	signed long accum;
***************
*** 142,149 ****
  
  		el = INTEGER_map_value2enum(specs, accum);
  		if(el) {
  			scrsize = el->enum_len + 32;
  			scr = (char *)alloca(scrsize);
  			if(plainOrXER == 0)
  				ret = snprintf(scr, scrsize,
  					"%ld (%s)", accum, el->enum_name);
--- 141,152 ----
  
  		el = INTEGER_map_value2enum(specs, accum);
  		if(el) {
+ 			scrsize = sizeof(scratch);
+ 			scr = scratch;
+ 			/* cannot use alloca in kernel
  			scrsize = el->enum_len + 32;
  			scr = (char *)alloca(scrsize);
+ 			*/
  			if(plainOrXER == 0)
  				ret = snprintf(scr, scrsize,
  					"%ld (%s)", accum, el->enum_name);
